###############################################################################
# Stage 1 — common-base (shared bits)
###############################################################################
FROM ubuntu:22.04 AS common-base

ENV DEBIAN_FRONTEND=noninteractive \
    TZ=Etc/UTC

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        sudo docker.io tzdata iputils-ping \
        software-properties-common ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /root


###############################################################################
# Stage 2 — final image: PXE + dnsmasq + SSH + NFSv4 + Samba
###############################################################################
FROM common-base AS final

ARG MEMTEST_VERSION=5.31b
ARG SYSLINUX_VERSION=6.03
ENV TEMP_SYSLINUX_PATH=/tmp/syslinux-${SYSLINUX_VERSION}

# --------------------------------------------------------------------------- #
# Packages                                                                    #
# --------------------------------------------------------------------------- #
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        vim wget \
        dnsmasq \
        openssh-server \
        nfs-kernel-server rpcbind \
        samba samba-common-bin \
    && rm -rf /var/lib/apt/lists/*

# --------------------------------------------------------------------------- #
# OpenSSH                                                                     #
# --------------------------------------------------------------------------- #
RUN echo 'root:root' | chpasswd && \
    sed -Ei 's/^#?PermitRootLogin .*/PermitRootLogin yes/'  /etc/ssh/sshd_config && \
    sed -Ei 's/^#?PasswordAuthentication .*/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
    echo 'Port 2222' >> /etc/ssh/sshd_config && \
    mkdir -p /var/run/sshd && \
    ssh-keygen -A

# --------------------------------------------------------------------------- #
# NFS export                                                                  #
# --------------------------------------------------------------------------- #
RUN mkdir -p /home/nfs && chown nobody:nogroup /home/nfs && \
    echo '/home/nfs *(rw,sync,no_subtree_check,insecure,fsid=0,no_root_squash)' > /etc/exports

# --------------------------------------------------------------------------- #
# Samba share (/home/samba - public, guest-writable)                          #
# --------------------------------------------------------------------------- #
RUN mkdir -p /home/samba && chown nobody:nogroup /home/samba && \
    cat >/etc/samba/smb.conf <<'EOF'
[global]
   workgroup = WORKGROUP
   server string = Docker Samba Server
   map to guest = Bad User
   smb ports = 445 139
   disable netbios = no
   dns proxy = no
[public]
   path = /home/samba
   browsable = yes
   writable = yes
   guest ok = yes
   read only = no
EOF
# create a Samba password for root (same as Linux passwd)
RUN (echo root; echo root) | smbpasswd -s -a root

# --------------------------------------------------------------------------- #
# PXE (Syslinux) & Memtest                                                    #
# --------------------------------------------------------------------------- #
WORKDIR /tmp
RUN set -e; \
    mkdir -p "${TEMP_SYSLINUX_PATH}" && \
    wget -q "https://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-${SYSLINUX_VERSION}.tar.gz" && \
    tar -xzf "syslinux-${SYSLINUX_VERSION}.tar.gz" && \
    mkdir -p /var/lib/tftpboot && \
    cp ${TEMP_SYSLINUX_PATH}/bios/core/pxelinux.0                    /var/lib/tftpboot/ && \
    cp ${TEMP_SYSLINUX_PATH}/bios/com32/libutil/libutil.c32          /var/lib/tftpboot/ && \
    cp ${TEMP_SYSLINUX_PATH}/bios/com32/elflink/ldlinux/ldlinux.c32  /var/lib/tftpboot/ && \
    cp ${TEMP_SYSLINUX_PATH}/bios/com32/menu/menu.c32                /var/lib/tftpboot/ && \
    rm -rf "${TEMP_SYSLINUX_PATH}" "syslinux-${SYSLINUX_VERSION}.tar.gz" && \
    wget -q "http://www.memtest.org/download/archives/${MEMTEST_VERSION}/memtest86+-${MEMTEST_VERSION}.bin.gz" && \
    gzip -d "memtest86+-${MEMTEST_VERSION}.bin.gz" && \
    mkdir -p /var/lib/tftpboot/memtest && \
    mv "memtest86+-${MEMTEST_VERSION}.bin" /var/lib/tftpboot/memtest/memtest86+

# --------------------------------------------------------------------------- #
# Local files & banner                                                        #
# --------------------------------------------------------------------------- #
COPY tftpboot/ /var/lib/tftpboot/
COPY etc/      /etc/
COPY welcome   /
RUN echo '[[ $- == *i* ]] && cat /welcome' >> /etc/bash.bashrc

# --------------------------------------------------------------------------- #
# Entrypoint                                                                  #
# --------------------------------------------------------------------------- #
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["/usr/sbin/sshd", "-D", "-p", "2222"]

# --------------------------------------------------------------------------- #
# Expose ports                                                                #
# --------------------------------------------------------------------------- #
# EXPOSE 2222            # SSH (inside 2222)
# EXPOSE 2049            # NFSv4
# EXPOSE 111/udp 111     # rpcbind
# EXPOSE 20048/udp 20048 # rpc.mountd (v3 export list)
# EXPOSE 67/udp 69/udp   # DHCP, TFTP
# EXPOSE 445 139         # Samba/SMB
# EXPOSE 137/udp 138/udp # NetBIOS name service / datagram
EXPOSE 2222
EXPOSE 2049
EXPOSE 111/udp 111
EXPOSE 20048/udp 20048
EXPOSE 67/udp 69/udp
EXPOSE 445 139
EXPOSE 137/udp 138/udp
